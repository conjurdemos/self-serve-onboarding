#!/bin/bash
source ./onboard-demo.config

if [[ $# != 1 ]]; then echo "Usage: $0 <access-request-filename>"; exit -1; fi
export fileName=$1

main() {
  clear
  ./_git-rest.sh merge $fileName
  create_safe_accounts_identities
  load_policies
}

create_safe_accounts_identities() {
  # create safe w/ accounts, tag safe w/ PAS_LOB_NAME
  pushd java > /dev/null
    java -cp ./pas:./dap -jar OnboardProject.jar "$@"
  popd > /dev/null
}

load_policies() {
  PAS_VAULT_NAME=$(cat $ACCESS_REQUEST_JSON_FILE | jq -r .vaultName)
  PAS_LOB_NAME=$(cat $ACCESS_REQUEST_JSON_FILE | jq -r .lobName)
  PAS_SAFE_NAME=$(cat $ACCESS_REQUEST_JSON_FILE | jq -r .safeName)

i=1
conjur_identity=$(cat $ACCESS_REQUEST_JSON_FILE | jq -r .identities[].identity | tr \\n \\t | cut -f$i)
while [[ "$conjur_identity" != "" ]];  do

    # remove bangs, spaces and slashes in identity name for filename
    id_name=$(echo $conjur_identity | sed -e "s#!##"g | sed -e "s# #-#"g | sed -e "s#/#_#"g)
    policy_fname=./conjur-policy/consumer-grant-policy-$PAS_SAFE_NAME-$id_name.yaml

    # Instantiate policy template with this access request info
    sed -e "s#{{ PAS_VAULT_NAME }}#$PAS_VAULT_NAME#g" \
	"./conjur-policy/template/identity-consumer-grant-policy.template.yaml" |
      sed -e "s#{{ PAS_LOB_NAME }}#$PAS_LOB_NAME#g" |
      sed -e "s#{{ PAS_SAFE_NAME }}#$PAS_SAFE_NAME#g" |
      sed -e "s#{{ CONJUR_SAFE_CONSUMER_IDENTITY }}#$conjur_identity#g" \
      > $policy_fname

    load_policy_REST.sh root $policy_fname delete > /dev/null

    echo
    echo
    echo "Access to secrets in $PAS_SAFE_NAME in vault $PAS_VAULT_NAME granted to \"$conjur_identity\"."
    echo

    let i=i+1
    conjur_identity=$(cat $ACCESS_REQUEST_JSON_FILE | jq -r .identities[].identity | tr \\n \\t | cut -f$i)
  done
}

main "$@"
